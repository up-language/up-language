(defun add2 (a b) (+ a b]
(console.log (add2 11 22]
(console.log (* 5 (+ 2 3) 10]
(defvar x (add2 100 23]
(defun add_x (n) (+ n x]
(console.log (add_x 10]
(console.log (let [(x 11) (y 22)] (+ x y]]
(console.log (let* [(x 11) (y 22)] (+ x y]]
(define (fact x)
  (do* ((n 2 (+ 1 n)) (rlt 1))
       ((< x n) rlt)
    (set! rlt (* rlt n))))
(console.log (fact 4))
(define (fact2 x)
  (do ((n 2 (+ 1 n)) (rlt 1))
      ((< x n) rlt)
    (set! rlt (* rlt n))))
(console.log (fact2 4))
(defun dummy1 ()
  (define a 22)
  (defvar b 33)
  (console.log (+ a b))
  )
(dummy1)
(defun dummy2 ()
  [define (my_add2 a b) (+ a b]
  (console.log (my_add2 33 44]
(dummy2)
(console.log (* 2 3]
(console.log (+ 2 null undefined 3]
(console.log "abc")
(console.log (. 11 undefined null "22"))
(console.log (+ 11 undefined null "22"))
(console.log "abc\nxyz")
(print (. 11 undefined null "22"))
